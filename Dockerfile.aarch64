FROM --platform=linux/amd64 rustembedded/cross:aarch64-unknown-linux-gnu-0.2.1 as builder

RUN dpkg --add-architecture arm64
RUN apt-get update
RUN apt-get install --assume-yes libmysqlclient-dev:arm64

ENV RUSTUP_HOME=/usr/local/rustup \
    CARGO_HOME=/usr/local/cargo \
    PATH=/usr/local/cargo/bin:$PATH

RUN curl https://sh.rustup.rs -sSf | sh -s -- -t aarch64-unknown-linux-gnu -y

WORKDIR /build

# Avoid having to install/build all dependencies by copying
# the Cargo files and making a dummy src/main.rs
COPY Cargo.toml .
RUN mkdir src
RUN echo "fn main() {}" > src/main.rs
RUN cargo build --release --target aarch64-unknown-linux-gnu

# We need to touch our real main.rs file or else docker will use
# the cached one.
COPY . .
RUN touch src/main.rs

RUN cargo build --release --target aarch64-unknown-linux-gnu

FROM --platform=linux/arm64 ubuntu:16.04

RUN apt-get update
RUN apt-get install --assume-yes libmysqlclient-dev

WORKDIR /app

COPY --from=builder /build/target/aarch64-unknown-linux-gnu/release/foobot2 .
COPY static ./static
COPY templates ./templates

CMD ["/app/foobot2"]
